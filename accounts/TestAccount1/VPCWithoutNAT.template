AWSTemplateFormatVersion: "2010-09-09"

Description: CloudSLAW CloudFormation template to create a VPC with public and private subnets, without NAT gateway, and an EC2 instance in the private subnet

Parameters:
  ImageId:
    Description: Region specific image from the Parameter Store
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64

Resources:

  # VPC
  CloudSLAWVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      Tags:
        - Key: Name
          Value: CloudSLAW

  # Internet Gateway
  CloudSLAWInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: CloudSLAW-IGW

  CloudSLAWAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref CloudSLAWVPC
      InternetGatewayId: !Ref CloudSLAWInternetGateway

  # DHCP Options Set
  CloudSLAWDHCPOptionSet:
    Type: AWS::EC2::DHCPOptions
    Properties:
      DomainName: ec2.internal
      DomainNameServers:
        - AmazonProvidedDNS
      Tags:
        - Key: Name
          Value: CloudSLAW-DHCP

  CloudSLAWVPCDHCPOptionsAssociation:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      DhcpOptionsId: !Ref CloudSLAWDHCPOptionSet
      VpcId: !Ref CloudSLAWVPC

  # Subnets
  SlawPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CloudSLAWVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select
        - 0
        - !GetAZs
      MapPublicIpOnLaunch: "true"
      Tags:
        - Key: Name
          Value: slaw-public-1

  SlawPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CloudSLAWVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select
        - 1
        - !GetAZs
      MapPublicIpOnLaunch: "true"
      Tags:
        - Key: Name
          Value: slaw-public-2

  SlawPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CloudSLAWVPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: !Select
        - 0
        - !GetAZs
      Tags:
        - Key: Name
          Value: slaw-private-1

  SlawPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CloudSLAWVPC
      CidrBlock: 10.0.4.0/24
      AvailabilityZone: !Select
        - 1
        - !GetAZs
      Tags:
        - Key: Name
          Value: slaw-private-2

  # Route Tables
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CloudSLAWVPC
      Tags:
        - Key: Name
          Value: CloudSLAW-Public-RT

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CloudSLAWVPC
      Tags:
        - Key: Name
          Value: CloudSLAW-Private-RT

  # Routes
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: CloudSLAWAttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref CloudSLAWInternetGateway

  # Subnet Route Table Associations
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SlawPublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SlawPublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SlawPrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SlawPrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

  # Network ACLs
  PublicNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref CloudSLAWVPC
      Tags:
        - Key: Name
          Value: CloudSLAW-Public-NACL

  PrivateNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref CloudSLAWVPC
      Tags:
        - Key: Name
          Value: CloudSLAW-Private-NACL

  # Default NACL Entries
  InboundPublicNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0

  OutboundPublicNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0

  InboundPrivateNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0

  OutboundPrivateNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0

  # Associate Network ACLs with Subnets
  PublicSubnet1NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref SlawPublicSubnet1
      NetworkAclId: !Ref PublicNetworkAcl

  PublicSubnet2NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref SlawPublicSubnet2
      NetworkAclId: !Ref PublicNetworkAcl

  PrivateSubnet1NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref SlawPrivateSubnet1
      NetworkAclId: !Ref PrivateNetworkAcl

  PrivateSubnet2NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref SlawPrivateSubnet2
      NetworkAclId: !Ref PrivateNetworkAcl

  # Security Group
  PrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Private security group with no inbound rules and outbound access to all IPs
      VpcId: !Ref CloudSLAWVPC
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: CloudSLAW-Private-SG

  SLAWSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group allowing all outbound traffic and inbound HTTPS from VPC
      VpcId: !Ref CloudSLAWVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 10.0.0.0/16
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Endpoint-SG

  # IAM Role for SSM Client
  SSMClientRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      RoleName: SSMClient

  # Instance Profile for EC2 to use SSM Client Role
  SSMClientInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref SSMClientRole
      InstanceProfileName: SSMClient

  # New EC2 Instance
  SLAWInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId
      InstanceType: t2.micro
      SubnetId: !Ref SlawPrivateSubnet1
      IamInstanceProfile: !Ref SSMClientInstanceProfile
      SecurityGroupIds:
        - !Ref PrivateSecurityGroup
      Tags:
        - Key: Name
          Value: SLAW

Outputs:
  VpcID:
    Description: ID of the VPC
    Value: !Ref CloudSLAWVPC
    Export:
      Name: !Sub ${AWS::StackName}-VpcId

  SlawPrivateSubnet1Id:
    Description: The ID of Private Subnet 1
    Value: !Ref SlawPrivateSubnet1
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnet1Id

  SLAWSecurityGroupId:
    Description: The ID of the SLAW Security Group
    Value: !Ref SLAWSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-SLAWSecurityGroupId

  RoleName:
    Description: Name of the IAM Role
    Value: !Ref SSMClientRole

  InstanceProfileName:
    Description: Name of the Instance Profile
    Value: !Ref SSMClientInstanceProfile

  SLAWInstanceId:
    Description: ID of the SLAW EC2 Instance
    Value: !Ref SLAWInstance
